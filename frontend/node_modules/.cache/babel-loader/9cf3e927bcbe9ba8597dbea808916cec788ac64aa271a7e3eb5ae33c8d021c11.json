{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyectos\\\\gestion_usuario\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Input, Popconfirm, Form, Typography, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editingKey, setEditingKey] = useState('');\n  const [form] = Form.useForm();\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      message.error('Error fetching users');\n    }\n  };\n  const isEditing = record => record.id === editingKey;\n  const edit = record => {\n    setEditingKey(record.id);\n    form.setFieldsValue(record);\n  };\n  const cancel = () => {\n    setEditingKey('');\n  };\n  const save = async id => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...users];\n      const index = newData.findIndex(item => id === item.id);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        setUsers(newData);\n        setEditingKey('');\n        await axios.put(`http://localhost:3000/users/${id}`, row);\n        message.success('User updated successfully');\n      }\n    } catch (error) {\n      console.error('Error updating user:', error);\n      message.error('Error updating user');\n    }\n  };\n  const columns = [\n    // Columnas existentes...\n  ];\n  const mergedColumns = columns.map(col => ({\n    ...col,\n    onCell: record => ({\n      record,\n      inputType: col.editable ? 'text' : 'none',\n      dataIndex: col.dataIndex,\n      title: col.title,\n      editing: isEditing(record)\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      dataSource: users,\n      columns: mergedColumns,\n      rowKey: \"id\",\n      pagination: {\n        pageSize: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"SKC5JyggmbrDYpYDB7Uvo0A8Qfg=\", false, function () {\n  return [Form.useForm];\n});\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Input","Popconfirm","Form","Typography","message","axios","jsxDEV","_jsxDEV","Text","UserList","_s","users","setUsers","editingKey","setEditingKey","form","useForm","fetchData","response","get","data","error","console","isEditing","record","id","edit","setFieldsValue","cancel","save","row","validateFields","newData","index","findIndex","item","splice","put","success","columns","mergedColumns","map","col","onCell","inputType","editable","dataIndex","title","editing","component","children","bordered","dataSource","rowKey","pagination","pageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/proyectos/gestion_usuario/frontend/src/components/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, Popconfirm, Form, Typography, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/users');\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      message.error('Error fetching users');\r\n    }\r\n  };\r\n\r\n  const isEditing = (record) => record.id === editingKey;\r\n\r\n  const edit = (record) => {\r\n    setEditingKey(record.id);\r\n    form.setFieldsValue(record);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (id) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...users];\r\n      const index = newData.findIndex((item) => id === item.id);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setUsers(newData);\r\n        setEditingKey('');\r\n        await axios.put(`http://localhost:3000/users/${id}`, row);\r\n        message.success('User updated successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      message.error('Error updating user');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    // Columnas existentes...\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => ({\r\n    ...col,\r\n    onCell: (record) => ({\r\n      record,\r\n      inputType: col.editable ? 'text' : 'none',\r\n      dataIndex: col.dataIndex,\r\n      title: col.title,\r\n      editing: isEditing(record),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        bordered\r\n        dataSource={users}\r\n        columns={mergedColumns}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 10 }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}