{"ast":null,"code":"// Importa la biblioteca Axios\nimport axios from 'axios';\n\n// Define las funciones para realizar las solicitudes HTTP a la API\n\n// Función para obtener todos los usuarios\nasync function getAllUsers() {\n  try {\n    const response = await axios.get('http://localhost:3000/users');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener usuarios:', error);\n    throw error;\n  }\n}\n\n// Función para obtener un usuario por ID\nasync function getUserById(userId) {\n  try {\n    const response = await axios.get(`http://localhost:3000/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener usuario por ID:', error);\n    throw error;\n  }\n}\n\n// Función para crear un nuevo usuario\nasync function createUser(userData) {\n  try {\n    const response = await axios.post('http://localhost:3000/users', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear usuario:', error);\n    throw error;\n  }\n}\n\n// Función para actualizar un usuario existente\nasync function updateUser(userId, userData) {\n  try {\n    const response = await axios.put(`http://localhost:3000/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar usuario:', error);\n    throw error;\n  }\n}\n\n// Función para eliminar un usuario\nasync function deleteUser(userId) {\n  try {\n    const response = await axios.delete(`http://localhost:3000/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar usuario:', error);\n    throw error;\n  }\n}\n\n// Exporta las funciones para su uso en otros archivos\nexport { getAllUsers, getUserById, createUser, updateUser, deleteUser };","map":{"version":3,"names":["axios","getAllUsers","response","get","data","error","console","getUserById","userId","createUser","userData","post","updateUser","put","deleteUser","delete"],"sources":["C:/proyectos/gestion_usuario/frontend/src/App.js"],"sourcesContent":["// Importa la biblioteca Axios\nimport axios from 'axios';\n\n// Define las funciones para realizar las solicitudes HTTP a la API\n\n// Función para obtener todos los usuarios\nasync function getAllUsers() {\n  try {\n    const response = await axios.get('http://localhost:3000/users');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener usuarios:', error);\n    throw error;\n  }\n}\n\n// Función para obtener un usuario por ID\nasync function getUserById(userId) {\n  try {\n    const response = await axios.get(`http://localhost:3000/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener usuario por ID:', error);\n    throw error;\n  }\n}\n\n// Función para crear un nuevo usuario\nasync function createUser(userData) {\n  try {\n    const response = await axios.post('http://localhost:3000/users', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear usuario:', error);\n    throw error;\n  }\n}\n\n// Función para actualizar un usuario existente\nasync function updateUser(userId, userData) {\n  try {\n    const response = await axios.put(`http://localhost:3000/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar usuario:', error);\n    throw error;\n  }\n}\n\n// Función para eliminar un usuario\nasync function deleteUser(userId) {\n  try {\n    const response = await axios.delete(`http://localhost:3000/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar usuario:', error);\n    throw error;\n  }\n}\n\n// Exporta las funciones para su uso en otros archivos\nexport { getAllUsers, getUserById, createUser, updateUser, deleteUser };\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA,eAAeC,WAAWA,CAAA,EAAG;EAC3B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,6BAA6B,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,eAAeE,WAAWA,CAACC,MAAM,EAAE;EACjC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,+BAA8BK,MAAO,EAAC,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,eAAeI,UAAUA,CAACC,QAAQ,EAAE;EAClC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAED,QAAQ,CAAC;IAC1E,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,eAAeO,UAAUA,CAACJ,MAAM,EAAEE,QAAQ,EAAE;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAACa,GAAG,CAAE,+BAA8BL,MAAO,EAAC,EAAEE,QAAQ,CAAC;IACnF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,eAAeS,UAAUA,CAACN,MAAM,EAAE;EAChC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACe,MAAM,CAAE,+BAA8BP,MAAO,EAAC,CAAC;IAC5E,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,SAASJ,WAAW,EAAEM,WAAW,EAAEE,UAAU,EAAEG,UAAU,EAAEE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}