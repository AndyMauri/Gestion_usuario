{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyectos\\\\gestion_usuario\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography, message, Button } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editingKey, setEditingKey] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      message.error('Error fetching users');\n    }\n  };\n  const edit = record => {\n    setEditingKey(record.id);\n  };\n  const save = async id => {\n    try {\n      // Aquí puedes agregar la lógica para guardar los datos en la base de datos\n      setEditingKey('');\n      message.success('User updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Error updating user');\n    }\n  };\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id'\n  }, {\n    title: 'Name',\n    dataIndex: 'name'\n  }, {\n    title: 'Email',\n    dataIndex: 'email'\n  }, {\n    title: 'Age',\n    dataIndex: 'age'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => save(record.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bordered: true,\n    dataSource: users,\n    columns: columns,\n    rowKey: \"id\",\n    pagination: {\n      pageSize: 10\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"rXZQuy1bHfbO5Vcf3VxTl0YAvpg=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Input","InputNumber","Popconfirm","Form","Typography","message","Button","axios","jsxDEV","_jsxDEV","Text","UserList","_s","users","setUsers","editingKey","setEditingKey","fetchData","response","get","data","error","console","edit","record","id","save","success","columns","title","dataIndex","render","_","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bordered","dataSource","rowKey","pagination","pageSize","_c","$RefreshReg$"],"sources":["C:/proyectos/gestion_usuario/frontend/src/components/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography, message, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/users');\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      message.error('Error fetching users');\r\n    }\r\n  };\r\n\r\n  const edit = (record) => {\r\n    setEditingKey(record.id);\r\n  };\r\n\r\n  const save = async (id) => {\r\n    try {\r\n      // Aquí puedes agregar la lógica para guardar los datos en la base de datos\r\n      setEditingKey('');\r\n      message.success('User updated successfully');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      message.error('Error updating user');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      render: (_, record) => {\r\n        return (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => save(record.id)}>\r\n              Save\r\n            </Button>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      bordered\r\n      dataSource={users}\r\n      columns={columns}\r\n      rowKey=\"id\"\r\n      pagination={{ pageSize: 10 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}